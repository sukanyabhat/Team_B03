#pandas for data manipulation
import pandas as pd
#numpy for numerical manipulation
import numpy as np
#to plot
import matplotlib.pylab as plt
import sys
#for adjusted dickey fuller test
from statsmodels.tsa.stattools import adfuller


#set parameters
%matplotlib inline
plt.rcParams['figure.figsize'] = 15, 6


#lamda function to define date format
dateparse = lambda dates: pd.datetime.strptime(dates, '%m/%d/%Y')
# tab delimited; specify the time column
data = pd.read_csv('C:\\Users\\sukanyabhat\\Desktop\\GODADDY\\Data\\student_data_20160215\\student_data_20160215.txt', sep="\t",parse_dates='orderdate', index_col='orderdate',date_parser=dateparse)
output_file="anomalies.csv"
fh=open(output_file,'w')
#calculated metrics
data['gcrmonth'] = data['gcr'] / data['product_months']
data['gcrunits']=data['gcr'] / data['product_units']
data['monthsunit']=data['product_months'] / data['product_units']
#Let's take one subset of data and plot its TS
#Need to modify this code to group on all the combinations and pull time series
# something like pandas group by 

group=data.groupby(['report_region_1','report_region_2','product_category_id'])
#cnt=0
events=[]
for a,b,c in group.groups:
    data_subset=data[(data.report_region_1==a) & (data.report_region_2==b) & (data.product_category_id==c)]
    data_subset.sortlevel(['orderdate'],inplace=True)
    if(len(data_subset.index)>=30):
        print(a, " " , b , " " , c)
        ts_gcr = data_subset['gcr'] 
    #    ts_orders = data_subset['orders'] 
    #    ts_months = data_subset['product_months']
        ts_units = data_subset['product_units']
        ts_gcrmonth = data_subset['gcrmonth'] 
        ts_gcrunits = data_subset['gcrunits'] 
        ts_monthsunit = data_subset['monthsunit']     
        events=timeseries(ts_gcr)
        for i in range(len(events)):
            #a.join([b,',',str(c),',',str(events[i]),"\n"])
            fh.write(a+','+b+','+str(c)+','+str(events[i])+','+'GCR'+"\n")
        events=timeseries(ts_units)
        for i in range(len(events)):
            #a.join([b,',',str(c),',',str(events[i]),"\n"])
            fh.write(a+','+b+','+str(c)+','+str(events[i])+','+'UNITS'+"\n")
        events=timeseries(ts_gcrmonth)
        for i in range(len(events)):
            #a.join([b,',',str(c),',',str(events[i]),"\n"])
            fh.write(a+','+b+','+str(c)+','+str(events[i])+','+'GCR_Month'+"\n")
        events=timeseries(ts_gcrunits)
        for i in range(len(events)):
            #a.join([b,',',str(c),',',str(events[i]),"\n"])
            fh.write(a+','+b+','+str(c)+','+str(events[i])+','+'GCR_Units'+"\n")
        events=timeseries(ts_monthsunit)
        for i in range(len(events)):
            #a.join([b,',',str(c),',',str(events[i]),"\n"])
            fh.write(a+','+b+','+str(c)+','+str(events[i])+','+'Month Units'+"\n")

#            print(a," ",b," ",c," ", events[i])
                
#        cnt+=1
#        if(cnt==2):
#          break
    else:
        print("uh oh")
fh.close()



